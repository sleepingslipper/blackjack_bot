from telebot import types
from db import *
from config import *

createGame = types.InlineKeyboardButton(text='üî•–°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É', callback_data='createGame')
reloadGame = types.InlineKeyboardButton(text='‚ôª–û–±–Ω–æ–≤–∏—Ç—å', callback_data='reloadGame')
myGame = types.InlineKeyboardButton(text='üòé–ú–æ–∏ –∏–≥—Ä—ã', callback_data='myGame')
backBtn = types.InlineKeyboardButton(text='‚¨Ö–ù–∞–∑–∞–¥', callback_data='back')

menuUser = types.ReplyKeyboardMarkup(True, False)
menuUser.add('üÉè –ò–≥—Ä–∞—Ç—å')
menuUser.add('üñ• –ö–∞–±–∏–Ω–µ—Ç', 'üìú –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
menuUser.add('‚ö†–ü–æ–º–æ—â—å‚ö†')

reloadKey = types.InlineKeyboardMarkup()
reloadKey.add(reloadGame)

adminPanel = types.ReplyKeyboardMarkup(True, False)
adminPanel.add('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏')
adminPanel.add('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –±–æ—Ç—É')
adminPanel.add('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Qiwi')
adminPanel.add('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ')
adminPanel.add('–†–∞—Å—Å—ã–ª–∫–∞')
adminPanel.add('–ù–∞–∑–∞–¥')

cancelButton = types.ReplyKeyboardMarkup(True, False)
cancelButton.add('üí¢–û—Ç–º–µ–Ω–∞üí¢')

usersAdm = types.ReplyKeyboardMarkup(True, False)
usersAdm.add('–í—ã–¥–∞—Ç—å –±–∞–ª–∞–Ω—Å', '–ó–∞–±—Ä–∞—Ç—å –±–∞–ª–∞–Ω—Å')
usersAdm.add('–í—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞', '–ó–∞–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∞')
usersAdm.add('–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ—Ñ.–ø—Ä–æ—Ü–µ–Ω—Ç', '–£–¥–∞–ª–∏—Ç—å –∏–≥—Ä—É')
usersAdm.add('–†–µ—Ñ.–ø—Ä–æ—Ü–µ–Ω—Ç', '–ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ—Ñ.–ø—Ä–æ—Ü–µ–Ω—Ç')
usersAdm.add('–ö–æ–º.–ø—Ä–æ—Ü–µ–Ω—Ç', '–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º.–ø—Ä–æ—Ü–µ–Ω—Ç')
usersAdm.add('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
usersAdm.add('<<<–ù–∞–∑–∞–¥')

qiwiAdm = types.ReplyKeyboardMarkup(True, False)
qiwiAdm.add('–ë–∞–ª–∞–Ω—Å Qiwi', '–í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏')
qiwiAdm.add('<<<–ù–∞–∑–∞–¥')

informAdmin = types.ReplyKeyboardMarkup(True, False)
informAdmin.add('–°–µ—Ä–≤–µ—Ä', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
informAdmin.add('<<<–ù–∞–∑–∞–¥')


def gameAll():
    game = types.InlineKeyboardMarkup()
    for i in Games.select().where(Games.gamerTwo == 0):
        gameBtn1 = types.InlineKeyboardButton(text=f'üí¢ #Game_{i.id} | –°—É–º–º–∞ {i.balance}—Ä',
                                              callback_data=f'gameCon_{i.id}')
        game.add(gameBtn1)
    game.add(myGame, reloadGame)
    game.add(createGame)
    return game


def gameUser(user_id):
    game = types.InlineKeyboardMarkup()
    for i in Games.select().where(Games.user_id == user_id):
        if i.gamerTwo == 0:
            gameBtn1 = types.InlineKeyboardButton(text=f'–°—É–º–º–∞ {i.balance}—Ä | üí¢–û—Ç–º–µ–Ω–∞',
                                                  callback_data=f'gameDel_{i.id}')
            game.add(gameBtn1)
    game.add(backBtn)
    return game


def keyFirst(id):
    gameStart = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton(text='–í–∑—è—Ç—å –µ—â–µ', callback_data=f'firstAdd_{id}')
    btn2 = types.InlineKeyboardButton(text='–•–≤–∞—Ç–∏—Ç, –ø—É—Å—Ç—å –∏–≥—Ä–∞–µ—Ç', callback_data=f'firstGive_{id}')
    gameStart.add(btn)
    gameStart.add(btn2)
    return gameStart


def keyTwo(id):
    gameStart = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton(text='–í–∑—è—Ç—å –µ—â–µ', callback_data=f'twoAdd_{id}')
    btn2 = types.InlineKeyboardButton(text='–•–≤–∞—Ç–∏—Ç, –≤—Å–∫—Ä—ã–≤–∞–µ–º—Å—è', callback_data=f'allIn_{id}')
    gameStart.add(btn)
    gameStart.add(btn2)
    return gameStart


cabinet = types.InlineKeyboardMarkup()
cabinetBal = types.InlineKeyboardButton(text='‚öú–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='addBalance')
cabinetGive = types.InlineKeyboardButton(text='‚öú–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤', callback_data='giveMoney')
referalSys = types.InlineKeyboardButton(text='üë•–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞', callback_data='refSys')
cabinet.add(cabinetBal, cabinetGive)
cabinet.add(referalSys)


def linkPay(comment):
    urlPay1 = urlPay.replace('{num}', str(number)).replace('{com}', str(comment))
    autoPay = types.InlineKeyboardMarkup(row_width=1)
    checkPay = types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data='checkPay')
    keyLink = types.InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∞', url=urlPay1)
    autoPay.add(checkPay, keyLink)
    return autoPay


def informKeyboard():
    markup = types.InlineKeyboardMarkup()
    topUser = types.InlineKeyboardButton(text='üß®–¢–æ–ø 10 –∏–≥—Ä–æ–∫–æ–≤', callback_data='top10')
    help = types.InlineKeyboardButton(text='‚úÖ–ü–æ–¥–¥–µ—Ä–∂–∫–∞', url=f't.me/{linkTg[1:]}')
    rulesGame = types.InlineKeyboardButton(text='üìï–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã',
                                           url='https://telegra.ph/Dvadcat-odno-21Ochko--Pravila-08-22')
    logsBtn = types.InlineKeyboardButton(text='üíé–õ–æ–≥–∏', url=linkLogs)
    chatMoneyBtn = types.InlineKeyboardButton(text='üí∂–í—ã–ø–ª–∞—Ç—ã', url=linkMoney)
    chatUser = types.InlineKeyboardButton(text='üìÅ–ß–∞—Ç', url=chatUsers)
    markup.add(topUser)
    markup.add(chatUser, help)
    markup.add(logsBtn, chatMoneyBtn)
    markup.add(rulesGame)
    return markup


def top10gamers():
    gamers = Global.select().where(Global.username != '@None').order_by(Global.countWin.desc(),
                                                                         Global.countBad.asc()).limit(10)
    markup = types.InlineKeyboardMarkup()
    backBtn2 = types.InlineKeyboardButton(text='‚¨Ö–ù–∞–∑–∞–¥', callback_data='back2')
    for i in gamers:
        btn = types.InlineKeyboardButton(text=f'‚Ñπ{i.username[1:]} |üïπ{i.countWin + i.countBad} –ò–≥—Ä—ã |üèÜ{i.countWin} –ü–æ–±–µ–¥—ã |‚òπ{i.countBad} –ü—Ä–æ–∏–≥—Ä—ã—à–∏', url=f't.me/{i.username[1:]}')
        markup.add(btn)
    markup.add(backBtn2)
    return markup


def payment():
    markup = types.InlineKeyboardMarkup()
    qiwi = types.InlineKeyboardButton(text='‚öúQIWI', callback_data='addBalanceQiwi')
    btc = types.InlineKeyboardButton(text='‚öúBTC | –ë–ê–ù–ö–ò–†', callback_data='addBalanceBtc')
    promo = types.InlineKeyboardButton(text='üíµ–ü—Ä–æ–º–æ-–∫–æ–¥üíµ', callback_data='promoActivate')
    markup.add(qiwi, btc)
    markup.add(promo)
    return markup


def closeMessage(user_id, phone, count):
    markup = types.InlineKeyboardMarkup()
    btnSendMoney = types.InlineKeyboardButton(text='–í—ã–ø–ª–∞—Ç–∏—Ç—å', callback_data=f'send_{user_id}:{phone}:{count}')
    btnBackMoney = types.InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏', callback_data=f'backMoney_{user_id}:{count}')
    btnClose = types.InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å', callback_data='closeMessage')
    markup.add(btnSendMoney)
    markup.add(btnBackMoney)
    markup.add(btnClose)
    return markup


def gameAdminDelete():
    game = types.InlineKeyboardMarkup()
    for i in Games.select().where(Games.gamerTwo == 0):
        gameBtn1 = types.InlineKeyboardButton(text=f'–°—É–º–º–∞ {i.balance}—Ä | üí¢–û—Ç–º–µ–Ω–∞',
                                              callback_data=f'gameDelAdmin_{i.id}')
        game.add(gameBtn1)
    game.add(backBtn)
    return game


def promoRemoute():
    markup = types.InlineKeyboardMarkup()
    addPromo = types.InlineKeyboardButton(text='–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ', callback_data='createPromo')
    delPromo = types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–º–æ', callback_data='deletePromo')
    activePromo = types.InlineKeyboardButton(text=f'–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ', callback_data='activePromo')
    markup.add(addPromo, delPromo)
    markup.add(activePromo)
    return markup